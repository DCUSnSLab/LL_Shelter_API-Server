# Generated by Django 4.1.3 on 2022-11-18 08:54

import Updator.models
import django.core.validators
from django.db import migrations, models
import django.db.models.deletion
import tinymce.models


class Migration(migrations.Migration):

    initial = True

    dependencies = [
    ]

    operations = [
        migrations.CreateModel(
            name='Advertisement',
            fields=[
                ('id', models.AutoField(primary_key=True, serialize=False)),
                ('name', models.CharField(max_length=50)),
                ('adType', models.CharField(choices=[('일반광고', '일반광고'), ('공익광고', '공익광고'), ('지역광고', '지역광고')], max_length=10)),
                ('company', models.CharField(max_length=20)),
                ('advertiser', models.CharField(max_length=20)),
                ('email', models.EmailField(max_length=128, verbose_name='사용자 이메일')),
                ('phone', models.CharField(max_length=20)),
                ('advertisement_status', models.CharField(choices=[('활성화', 'ACTIVATE'), ('대기', 'PAUSED'), ('정지', 'BANNED')], default='대기', max_length=20, null=True)),
                ('createDate', models.DateTimeField(auto_now_add=True)),
                ('lastEditDate', models.DateTimeField(auto_now=True)),
                ('isUpdate', models.BooleanField(default=False)),
            ],
        ),
        migrations.CreateModel(
            name='Comment',
            fields=[
                ('id', models.AutoField(primary_key=True, serialize=False)),
                ('text', models.TextField()),
                ('email', models.EmailField(blank=True, max_length=128, null=True, verbose_name='사용자 이메일')),
                ('comment_status', models.CharField(choices=[('활성화', 'ACTIVATE'), ('대기', 'PAUSED'), ('정지', 'BANNED')], default='대기', max_length=20, null=True)),
                ('boardType', models.CharField(blank=True, choices=[('Normal', '일상게시판'), ('Issue', '이슈게시판')], max_length=10, null=True)),
                ('createDate', models.DateTimeField(auto_now_add=True)),
                ('lastEditDate', models.DateTimeField(auto_now_add=True)),
                ('isUpdate', models.BooleanField(default=False)),
            ],
        ),
        migrations.CreateModel(
            name='Community',
            fields=[
                ('id', models.AutoField(primary_key=True, serialize=False)),
                ('name', models.CharField(max_length=50)),
                ('createDate', models.DateTimeField(auto_now_add=True)),
                ('lastEditDate', models.DateTimeField(auto_now=True)),
                ('isUpdate', models.BooleanField(default=False)),
                ('community_status', models.CharField(choices=[('활성화', 'ACTIVATE'), ('대기', 'PAUSED'), ('정지', 'BANNED')], default='대기', max_length=20, null=True)),
            ],
        ),
        migrations.CreateModel(
            name='Content',
            fields=[
                ('id', models.AutoField(primary_key=True, serialize=False)),
                ('title', models.CharField(max_length=100, null=True)),
                ('email', models.EmailField(blank=True, max_length=128, null=True, verbose_name='사용자 이메일')),
                ('content_status', models.CharField(default='대기', max_length=5, null=True)),
                ('contentType', models.CharField(max_length=10, null=True)),
                ('hits', models.DecimalField(decimal_places=0, default=0, max_digits=11, null=True)),
                ('likes', models.DecimalField(decimal_places=0, default=0, max_digits=11, null=True)),
                ('createDate', models.DateTimeField(auto_now_add=True)),
                ('lastEditDate', models.DateTimeField(auto_now=True)),
                ('isUpdate', models.BooleanField(default=False)),
            ],
        ),
        migrations.CreateModel(
            name='Shelter',
            fields=[
                ('id', models.AutoField(primary_key=True, serialize=False)),
                ('title', models.CharField(max_length=50, null=True)),
                ('shelter_description', models.TextField(blank=True, default='여기에 입력 하시오.', max_length=500, null=True)),
                ('shelter_status', models.CharField(choices=[('활성화', 'ACTIVATE'), ('대기', 'PAUSED'), ('정지', 'BANNED')], default='대기', max_length=20, null=True)),
                ('add_states', models.CharField(max_length=50, null=True)),
                ('add_city', models.CharField(max_length=50, null=True)),
                ('add_town', models.CharField(max_length=50, null=True)),
                ('add_last', models.CharField(max_length=50, null=True)),
                ('access_number', models.CharField(default='0000000', max_length=10)),
                ('createDate', models.DateTimeField(auto_now_add=True)),
                ('lastEditDate', models.DateTimeField(auto_now=True)),
                ('localupdateDate', models.DateTimeField(auto_now=True)),
            ],
        ),
        migrations.CreateModel(
            name='Shelter_media',
            fields=[
                ('id', models.AutoField(primary_key=True, serialize=False)),
                ('shelter_profile', models.FileField(blank=True, null=True, upload_to=Updator.models.profile_directory_path, validators=[django.core.validators.FileExtensionValidator(allowed_extensions=['jpg', 'jpeg', 'png'])])),
                ('contentQR', models.CharField(max_length=200, null=True)),
                ('communityQR', models.CharField(max_length=200, null=True)),
                ('shelterFK', models.ForeignKey(blank=True, db_column='shelterFK', null=True, on_delete=django.db.models.deletion.CASCADE, to='Updator.shelter')),
            ],
        ),
        migrations.CreateModel(
            name='Issue_Board',
            fields=[
                ('id', models.AutoField(primary_key=True, serialize=False)),
                ('name', models.CharField(max_length=50)),
                ('board_status', models.CharField(choices=[('활성화', 'ACTIVATE'), ('대기', 'PAUSED'), ('정지', 'BANNED')], default='대기', max_length=20, null=True)),
                ('createDate', models.DateTimeField(auto_now_add=True)),
                ('lastEditDate', models.DateTimeField(auto_now=True)),
                ('isUpdate', models.BooleanField(default=False)),
                ('communityFK', models.ForeignKey(blank=True, db_column='communityFK', null=True, on_delete=django.db.models.deletion.CASCADE, related_name='Community_Iboard', to='Updator.community')),
            ],
        ),
        migrations.CreateModel(
            name='Daily_Board',
            fields=[
                ('id', models.AutoField(primary_key=True, serialize=False)),
                ('name', models.CharField(max_length=50)),
                ('board_status', models.CharField(choices=[('활성화', 'ACTIVATE'), ('대기', 'PAUSED'), ('정지', 'BANNED')], default='대기', max_length=20, null=True)),
                ('createDate', models.DateTimeField(auto_now_add=True)),
                ('lastEditDate', models.DateTimeField(auto_now=True)),
                ('isUpdate', models.BooleanField(default=False)),
                ('communityFK', models.ForeignKey(blank=True, db_column='communityFK', null=True, on_delete=django.db.models.deletion.CASCADE, related_name='Community_Dboard', to='Updator.community')),
            ],
        ),
        migrations.CreateModel(
            name='Content_Description',
            fields=[
                ('id', models.AutoField(primary_key=True, serialize=False)),
                ('upload_file', models.FileField(blank=True, null=True, upload_to=Updator.models.user_directory_path, validators=[django.core.validators.FileExtensionValidator(allowed_extensions=['jpg', 'jpeg', 'png', 'mp4'])])),
                ('description', tinymce.models.HTMLField(blank=True, null=True)),
                ('width', models.CharField(max_length=10, null=True)),
                ('height', models.CharField(max_length=10, null=True)),
                ('HVType', models.CharField(max_length=10, null=True)),
                ('thumbnailPath', models.CharField(max_length=200, null=True)),
                ('contentFK', models.ForeignKey(blank=True, db_column='contentFK', null=True, on_delete=django.db.models.deletion.CASCADE, related_name='Content_Description', to='Updator.content')),
            ],
        ),
        migrations.AddField(
            model_name='content',
            name='shelterFK',
            field=models.ForeignKey(blank=True, db_column='shelterFK', null=True, on_delete=django.db.models.deletion.CASCADE, related_name='Shelter_Content', to='Updator.shelter'),
        ),
        migrations.AddField(
            model_name='community',
            name='shelterFK',
            field=models.ForeignKey(blank=True, db_column='shelterFK', null=True, on_delete=django.db.models.deletion.CASCADE, related_name='Shelter_Community', to='Updator.shelter'),
        ),
        migrations.CreateModel(
            name='Comment_media',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('image', models.FileField(blank=True, null=True, upload_to=Updator.models.Community_directory_path, validators=[django.core.validators.FileExtensionValidator(allowed_extensions=['jpg', 'jpeg', 'png'])])),
                ('commentFK', models.ForeignKey(blank=True, db_column='commentFK', null=True, on_delete=django.db.models.deletion.CASCADE, related_name='Comment_media', to='Updator.comment')),
            ],
        ),
        migrations.AddField(
            model_name='comment',
            name='dboardFK',
            field=models.ForeignKey(blank=True, db_column='dboardFK', null=True, on_delete=django.db.models.deletion.CASCADE, related_name='Dboard_Comment', to='Updator.daily_board'),
        ),
        migrations.AddField(
            model_name='comment',
            name='iboardFK',
            field=models.ForeignKey(blank=True, db_column='iboardFK', null=True, on_delete=django.db.models.deletion.CASCADE, related_name='Iboard_Comment', to='Updator.issue_board'),
        ),
        migrations.CreateModel(
            name='Advertisement_media',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('content', models.FileField(blank=True, null=True, upload_to=Updator.models.Advertisement_directory_path, validators=[django.core.validators.FileExtensionValidator(allowed_extensions=['jpg', 'jpeg', 'png', 'mp4', 'avi'])])),
                ('type', models.CharField(max_length=10)),
                ('advertisementFK', models.ForeignKey(blank=True, db_column='advertisementFK', null=True, on_delete=django.db.models.deletion.CASCADE, related_name='Ad_Media', to='Updator.advertisement')),
            ],
        ),
        migrations.AddField(
            model_name='advertisement',
            name='shelterFK',
            field=models.ForeignKey(blank=True, db_column='shelterFK', null=True, on_delete=django.db.models.deletion.CASCADE, related_name='Shelter_Advertisement', to='Updator.shelter'),
        ),
    ]
